// Code generated by protoc-gen-go.
// source: github.com/kazoup/platform/bleve/srv/proto/bleve/bleve.proto
// DO NOT EDIT!

/*
Package bleve is a generated protocol buffer package.

It is generated from these files:
	github.com/kazoup/platform/bleve/srv/proto/bleve/bleve.proto

It has these top-level messages:
	SearchRequest
	SearchResponse
	CreateRequest
	CreateResponse
*/
package bleve

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type SearchRequest struct {
	Term     string `protobuf:"bytes,1,opt,name=term" json:"term,omitempty"`
	From     int64  `protobuf:"varint,2,opt,name=from" json:"from,omitempty"`
	Size     int64  `protobuf:"varint,3,opt,name=size" json:"size,omitempty"`
	Category string `protobuf:"bytes,4,opt,name=category" json:"category,omitempty"`
	Url      string `protobuf:"bytes,5,opt,name=url" json:"url,omitempty"`
	Depth    int64  `protobuf:"varint,6,opt,name=depth" json:"depth,omitempty"`
	Type     string `protobuf:"bytes,7,opt,name=type" json:"type,omitempty"`
}

func (m *SearchRequest) Reset()                    { *m = SearchRequest{} }
func (m *SearchRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()               {}
func (*SearchRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type SearchResponse struct {
	Result string `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
}

func (m *SearchResponse) Reset()                    { *m = SearchResponse{} }
func (m *SearchResponse) String() string            { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()               {}
func (*SearchResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type CreateRequest struct {
	Id   string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Data string `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type CreateResponse struct {
	Status string `protobuf:"bytes,1,opt,name=Status" json:"Status,omitempty"`
}

func (m *CreateResponse) Reset()                    { *m = CreateResponse{} }
func (m *CreateResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()               {}
func (*CreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func init() {
	proto.RegisterType((*SearchRequest)(nil), "SearchRequest")
	proto.RegisterType((*SearchResponse)(nil), "SearchResponse")
	proto.RegisterType((*CreateRequest)(nil), "CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "CreateResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for BleveSearch service

type BleveSearchClient interface {
	Search(ctx context.Context, in *SearchRequest, opts ...client.CallOption) (*SearchResponse, error)
	Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error)
}

type bleveSearchClient struct {
	c           client.Client
	serviceName string
}

func NewBleveSearchClient(serviceName string, c client.Client) BleveSearchClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "blevesearch"
	}
	return &bleveSearchClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *bleveSearchClient) Search(ctx context.Context, in *SearchRequest, opts ...client.CallOption) (*SearchResponse, error) {
	req := c.c.NewRequest(c.serviceName, "BleveSearch.Search", in)
	out := new(SearchResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bleveSearchClient) Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "BleveSearch.Create", in)
	out := new(CreateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for BleveSearch service

type BleveSearchHandler interface {
	Search(context.Context, *SearchRequest, *SearchResponse) error
	Create(context.Context, *CreateRequest, *CreateResponse) error
}

func RegisterBleveSearchHandler(s server.Server, hdlr BleveSearchHandler) {
	s.Handle(s.NewHandler(&BleveSearch{hdlr}))
}

type BleveSearch struct {
	BleveSearchHandler
}

func (h *BleveSearch) Search(ctx context.Context, in *SearchRequest, out *SearchResponse) error {
	return h.BleveSearchHandler.Search(ctx, in, out)
}

func (h *BleveSearch) Create(ctx context.Context, in *CreateRequest, out *CreateResponse) error {
	return h.BleveSearchHandler.Create(ctx, in, out)
}

var fileDescriptor0 = []byte{
	// 262 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x54, 0x90, 0x41, 0x4f, 0x83, 0x40,
	0x10, 0x85, 0xdb, 0xd2, 0xa2, 0x4e, 0x05, 0x0d, 0xa7, 0x8d, 0xa7, 0x86, 0x93, 0xc6, 0x04, 0x12,
	0xbd, 0x7a, 0xd2, 0x7f, 0x60, 0x7f, 0xc1, 0x02, 0x53, 0x20, 0x82, 0xbb, 0xce, 0xce, 0x36, 0x69,
	0x7f, 0xbd, 0xb0, 0x5b, 0xd2, 0x70, 0x21, 0xbc, 0x9d, 0x6f, 0xdf, 0x7b, 0xb3, 0xf0, 0x51, 0xb7,
	0xdc, 0xd8, 0x22, 0x2b, 0x55, 0x9f, 0xff, 0xc8, 0xb3, 0xb2, 0x3a, 0xd7, 0x9d, 0xe4, 0x83, 0xa2,
	0x3e, 0x2f, 0x3a, 0x3c, 0x62, 0x6e, 0xe8, 0x98, 0x6b, 0x52, 0xac, 0x2e, 0xda, 0x7d, 0x33, 0x77,
	0x92, 0x5a, 0x88, 0xf6, 0x28, 0xa9, 0x6c, 0xbe, 0xf1, 0xcf, 0xa2, 0xe1, 0xe4, 0x1e, 0xd6, 0x8c,
	0xd4, 0x8b, 0xe5, 0x6e, 0xf9, 0x7c, 0x37, 0xaa, 0x03, 0xa9, 0x5e, 0xac, 0x06, 0x15, 0x8c, 0xca,
	0xb4, 0x67, 0x14, 0x81, 0x53, 0x8f, 0x70, 0x5b, 0x4a, 0xc6, 0x5a, 0xd1, 0x49, 0xac, 0x1d, 0xbd,
	0x85, 0xc0, 0x52, 0x27, 0x36, 0x4e, 0x44, 0xb0, 0xa9, 0x50, 0x73, 0x23, 0xc2, 0xe9, 0x2e, 0x9f,
	0x34, 0x8a, 0x9b, 0x71, 0x98, 0xee, 0x20, 0x9e, 0x62, 0x8d, 0x56, 0xbf, 0x06, 0x93, 0x18, 0x42,
	0x42, 0x63, 0x3b, 0xf6, 0xc9, 0xe9, 0x0b, 0x44, 0x5f, 0x84, 0x83, 0xff, 0x54, 0x0c, 0x60, 0xd5,
	0x56, 0xd7, 0x5a, 0x95, 0x64, 0xe9, 0x6a, 0x39, 0xb3, 0x09, 0xbd, 0x9a, 0xed, 0x59, 0xb2, 0x35,
	0x9e, 0x7f, 0xab, 0x61, 0xfb, 0x39, 0x2e, 0xed, 0x33, 0x93, 0xd7, 0x61, 0xec, 0xff, 0xe2, 0x6c,
	0xb6, 0xfd, 0xd3, 0x43, 0x36, 0xaf, 0x95, 0x2e, 0x46, 0xd8, 0xbb, 0x0f, 0xf0, 0xac, 0xd1, 0x00,
	0xcf, 0x63, 0xd3, 0x45, 0x11, 0xba, 0x57, 0x7d, 0xff, 0x0f, 0x00, 0x00, 0xff, 0xff, 0x2c, 0x4b,
	0xb8, 0x49, 0x95, 0x01, 0x00, 0x00,
}
