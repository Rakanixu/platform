// Code generated by protoc-gen-go.
// source: github.com/kazoup/datasource/srv/proto/datasource/datasource.proto
// DO NOT EDIT!

/*
Package go_micro_srv_datasource is a generated protocol buffer package.

It is generated from these files:
	github.com/kazoup/datasource/srv/proto/datasource/datasource.proto

It has these top-level messages:
	Endpoint
	CreateRequest
	CreateResponse
	DeleteRequest
	DeleteResponse
	SearchRequest
	SearchResponse
*/
package go_micro_srv_datasource

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type Endpoint struct {
	Id       string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Url      string `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	Size     int64  `protobuf:"varint,3,opt,name=size" json:"size,omitempty"`
	Files    int64  `protobuf:"varint,4,opt,name=files" json:"files,omitempty"`
	LastScan int64  `protobuf:"varint,5,opt,name=last_scan,json=lastScan" json:"last_scan,omitempty"`
}

func (m *Endpoint) Reset()                    { *m = Endpoint{} }
func (m *Endpoint) String() string            { return proto.CompactTextString(m) }
func (*Endpoint) ProtoMessage()               {}
func (*Endpoint) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type CreateRequest struct {
	Endpoint *Endpoint `protobuf:"bytes,1,opt,name=endpoint" json:"endpoint,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateRequest) GetEndpoint() *Endpoint {
	if m != nil {
		return m.Endpoint
	}
	return nil
}

type CreateResponse struct {
	Response string `protobuf:"bytes,1,opt,name=response" json:"response,omitempty"`
}

func (m *CreateResponse) Reset()                    { *m = CreateResponse{} }
func (m *CreateResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()               {}
func (*CreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type DeleteRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type DeleteResponse struct {
}

func (m *DeleteResponse) Reset()                    { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()               {}
func (*DeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type SearchRequest struct {
	Query  string `protobuf:"bytes,1,opt,name=query" json:"query,omitempty"`
	Limit  int64  `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
	Offset int64  `protobuf:"varint,3,opt,name=offset" json:"offset,omitempty"`
}

func (m *SearchRequest) Reset()                    { *m = SearchRequest{} }
func (m *SearchRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()               {}
func (*SearchRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type SearchResponse struct {
	Result []*Endpoint `protobuf:"bytes,1,rep,name=result" json:"result,omitempty"`
}

func (m *SearchResponse) Reset()                    { *m = SearchResponse{} }
func (m *SearchResponse) String() string            { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()               {}
func (*SearchResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *SearchResponse) GetResult() []*Endpoint {
	if m != nil {
		return m.Result
	}
	return nil
}

func init() {
	proto.RegisterType((*Endpoint)(nil), "go.micro.srv.datasource.Endpoint")
	proto.RegisterType((*CreateRequest)(nil), "go.micro.srv.datasource.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "go.micro.srv.datasource.CreateResponse")
	proto.RegisterType((*DeleteRequest)(nil), "go.micro.srv.datasource.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "go.micro.srv.datasource.DeleteResponse")
	proto.RegisterType((*SearchRequest)(nil), "go.micro.srv.datasource.SearchRequest")
	proto.RegisterType((*SearchResponse)(nil), "go.micro.srv.datasource.SearchResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for DataSource service

type DataSourceClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...client.CallOption) (*DeleteResponse, error)
	Search(ctx context.Context, in *SearchRequest, opts ...client.CallOption) (*SearchResponse, error)
}

type dataSourceClient struct {
	c           client.Client
	serviceName string
}

func NewDataSourceClient(serviceName string, c client.Client) DataSourceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "go.micro.srv.datasource"
	}
	return &dataSourceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *dataSourceClient) Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "DataSource.Create", in)
	out := new(CreateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataSourceClient) Delete(ctx context.Context, in *DeleteRequest, opts ...client.CallOption) (*DeleteResponse, error) {
	req := c.c.NewRequest(c.serviceName, "DataSource.Delete", in)
	out := new(DeleteResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataSourceClient) Search(ctx context.Context, in *SearchRequest, opts ...client.CallOption) (*SearchResponse, error) {
	req := c.c.NewRequest(c.serviceName, "DataSource.Search", in)
	out := new(SearchResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for DataSource service

type DataSourceHandler interface {
	Create(context.Context, *CreateRequest, *CreateResponse) error
	Delete(context.Context, *DeleteRequest, *DeleteResponse) error
	Search(context.Context, *SearchRequest, *SearchResponse) error
}

func RegisterDataSourceHandler(s server.Server, hdlr DataSourceHandler) {
	s.Handle(s.NewHandler(&DataSource{hdlr}))
}

type DataSource struct {
	DataSourceHandler
}

func (h *DataSource) Create(ctx context.Context, in *CreateRequest, out *CreateResponse) error {
	return h.DataSourceHandler.Create(ctx, in, out)
}

func (h *DataSource) Delete(ctx context.Context, in *DeleteRequest, out *DeleteResponse) error {
	return h.DataSourceHandler.Delete(ctx, in, out)
}

func (h *DataSource) Search(ctx context.Context, in *SearchRequest, out *SearchResponse) error {
	return h.DataSourceHandler.Search(ctx, in, out)
}

var fileDescriptor0 = []byte{
	// 381 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x93, 0xb1, 0x4f, 0xe3, 0x30,
	0x14, 0xc6, 0xdb, 0xa6, 0x8d, 0xd2, 0x77, 0x6a, 0x54, 0x59, 0xa7, 0xbb, 0xa8, 0x37, 0x1c, 0x64,
	0x00, 0x06, 0x94, 0x48, 0x65, 0x62, 0x60, 0x81, 0x32, 0x21, 0x31, 0x24, 0x23, 0x03, 0x72, 0x53,
	0xb7, 0xb5, 0x48, 0xe3, 0x60, 0x3b, 0x48, 0xf4, 0xdf, 0xe1, 0x1f, 0xc5, 0x71, 0x9c, 0x96, 0x54,
	0x6a, 0x60, 0x7b, 0xdf, 0xf7, 0xfc, 0xbe, 0x3c, 0xff, 0xac, 0xc0, 0xed, 0x8a, 0xca, 0x75, 0x31,
	0x0f, 0x12, 0xb6, 0x09, 0x5f, 0xf0, 0x96, 0x15, 0x79, 0xb8, 0xc0, 0x12, 0x0b, 0x56, 0xf0, 0x84,
	0x84, 0x82, 0xbf, 0x85, 0x39, 0x67, 0x92, 0x7d, 0x35, 0xf7, 0x65, 0xa0, 0x7b, 0xe8, 0xef, 0x8a,
	0x05, 0x1b, 0x9a, 0x70, 0x16, 0xa8, 0xf3, 0xc1, 0xbe, 0xed, 0x0b, 0x70, 0xee, 0xb3, 0x45, 0xce,
	0x68, 0x26, 0x91, 0x0b, 0x3d, 0xba, 0xf0, 0xba, 0x27, 0xdd, 0x8b, 0x61, 0xa4, 0x2a, 0x34, 0x06,
	0xab, 0xe0, 0xa9, 0xd7, 0xd3, 0x46, 0x59, 0x22, 0x04, 0x7d, 0x41, 0xb7, 0xc4, 0xb3, 0x94, 0x65,
	0x45, 0xba, 0x46, 0xbf, 0x61, 0xb0, 0xa4, 0x29, 0x11, 0x5e, 0x5f, 0x9b, 0x95, 0x40, 0xff, 0x60,
	0x98, 0x62, 0x21, 0x9f, 0x45, 0x82, 0x33, 0x6f, 0xa0, 0x3b, 0x4e, 0x69, 0xc4, 0x4a, 0xfb, 0x8f,
	0x30, 0xba, 0xe3, 0x04, 0x4b, 0x12, 0x91, 0xd7, 0x82, 0x08, 0x89, 0x6e, 0xc0, 0x21, 0x66, 0x0b,
	0xfd, 0xfd, 0x5f, 0xd3, 0xd3, 0xe0, 0xc8, 0xc6, 0x41, 0xbd, 0x6e, 0xb4, 0x1b, 0xf1, 0x2f, 0xc1,
	0xad, 0xf3, 0x44, 0xce, 0x32, 0x41, 0xd0, 0x04, 0x1c, 0x6e, 0x6a, 0x73, 0xa1, 0x9d, 0xf6, 0xff,
	0xc3, 0x68, 0x46, 0x52, 0xb2, 0xff, 0xfa, 0xc1, 0xbd, 0xfd, 0x31, 0xb8, 0xf5, 0x01, 0x33, 0x12,
	0xc3, 0x28, 0x26, 0x98, 0x27, 0xeb, 0x7a, 0x44, 0x5d, 0x5a, 0x15, 0xfc, 0xdd, 0x4c, 0x55, 0xa2,
	0x74, 0x53, 0xba, 0xa1, 0x52, 0x23, 0x53, 0x28, 0xb4, 0x40, 0x7f, 0xc0, 0x66, 0xcb, 0xa5, 0x20,
	0xd2, 0x60, 0x33, 0xca, 0x7f, 0x00, 0xb7, 0x0e, 0x35, 0x5b, 0x5f, 0x83, 0xad, 0xb6, 0x2c, 0xd2,
	0x12, 0x82, 0xf5, 0x33, 0x08, 0x66, 0x60, 0xfa, 0xd1, 0x03, 0x98, 0xa9, 0x7e, 0xac, 0xfb, 0xe8,
	0x09, 0xec, 0x8a, 0x08, 0x3a, 0x3b, 0x9a, 0xd1, 0x78, 0x82, 0xc9, 0xf9, 0xb7, 0xe7, 0x0c, 0x8b,
	0x4e, 0x19, 0x5e, 0xf1, 0x69, 0x09, 0x6f, 0x10, 0x6e, 0x09, 0x3f, 0x00, 0xad, 0xc3, 0x2b, 0x2a,
	0x2d, 0xe1, 0x8d, 0xb7, 0x68, 0x09, 0x6f, 0xe2, 0xf5, 0x3b, 0x73, 0x5b, 0xff, 0x0d, 0x57, 0x9f,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x7e, 0xaa, 0x97, 0xe2, 0x53, 0x03, 0x00, 0x00,
}
