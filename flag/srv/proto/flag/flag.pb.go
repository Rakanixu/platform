// Code generated by protoc-gen-go.
// source: github.com/kazoup/flag/srv/proto/flag/flag.proto
// DO NOT EDIT!

/*
Package go_micro_srv_flag is a generated protocol buffer package.

It is generated from these files:
	github.com/kazoup/flag/srv/proto/flag/flag.proto

It has these top-level messages:
	CreateRequest
	CreateResponse
	ReadRequest
	ReadResponse
	FlipRequest
	FlipResponse
	DeleteRequest
	DeleteResponse
	ListRequest
	ListResponse
*/
package go_micro_srv_flag

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type CreateRequest struct {
	Key         string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Value       bool   `protobuf:"varint,3,opt,name=value" json:"value,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type CreateResponse struct {
}

func (m *CreateResponse) Reset()                    { *m = CreateResponse{} }
func (m *CreateResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()               {}
func (*CreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type ReadRequest struct {
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
}

func (m *ReadRequest) Reset()                    { *m = ReadRequest{} }
func (m *ReadRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()               {}
func (*ReadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type ReadResponse struct {
	Key         string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Value       bool   `protobuf:"varint,3,opt,name=value" json:"value,omitempty"`
}

func (m *ReadResponse) Reset()                    { *m = ReadResponse{} }
func (m *ReadResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()               {}
func (*ReadResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type FlipRequest struct {
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
}

func (m *FlipRequest) Reset()                    { *m = FlipRequest{} }
func (m *FlipRequest) String() string            { return proto.CompactTextString(m) }
func (*FlipRequest) ProtoMessage()               {}
func (*FlipRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type FlipResponse struct {
}

func (m *FlipResponse) Reset()                    { *m = FlipResponse{} }
func (m *FlipResponse) String() string            { return proto.CompactTextString(m) }
func (*FlipResponse) ProtoMessage()               {}
func (*FlipResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type DeleteRequest struct {
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type DeleteResponse struct {
}

func (m *DeleteResponse) Reset()                    { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()               {}
func (*DeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type ListRequest struct {
}

func (m *ListRequest) Reset()                    { *m = ListRequest{} }
func (m *ListRequest) String() string            { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()               {}
func (*ListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type ListResponse struct {
	Result []*ReadResponse `protobuf:"bytes,1,rep,name=result" json:"result,omitempty"`
}

func (m *ListResponse) Reset()                    { *m = ListResponse{} }
func (m *ListResponse) String() string            { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()               {}
func (*ListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *ListResponse) GetResult() []*ReadResponse {
	if m != nil {
		return m.Result
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateRequest)(nil), "go.micro.srv.flag.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "go.micro.srv.flag.CreateResponse")
	proto.RegisterType((*ReadRequest)(nil), "go.micro.srv.flag.ReadRequest")
	proto.RegisterType((*ReadResponse)(nil), "go.micro.srv.flag.ReadResponse")
	proto.RegisterType((*FlipRequest)(nil), "go.micro.srv.flag.FlipRequest")
	proto.RegisterType((*FlipResponse)(nil), "go.micro.srv.flag.FlipResponse")
	proto.RegisterType((*DeleteRequest)(nil), "go.micro.srv.flag.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "go.micro.srv.flag.DeleteResponse")
	proto.RegisterType((*ListRequest)(nil), "go.micro.srv.flag.ListRequest")
	proto.RegisterType((*ListResponse)(nil), "go.micro.srv.flag.ListResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Flag service

type FlagClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error)
	Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error)
	Flip(ctx context.Context, in *FlipRequest, opts ...client.CallOption) (*FlipResponse, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...client.CallOption) (*DeleteResponse, error)
	List(ctx context.Context, in *ListRequest, opts ...client.CallOption) (*ListResponse, error)
}

type flagClient struct {
	c           client.Client
	serviceName string
}

func NewFlagClient(serviceName string, c client.Client) FlagClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "go.micro.srv.flag"
	}
	return &flagClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *flagClient) Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Flag.Create", in)
	out := new(CreateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *flagClient) Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Flag.Read", in)
	out := new(ReadResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *flagClient) Flip(ctx context.Context, in *FlipRequest, opts ...client.CallOption) (*FlipResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Flag.Flip", in)
	out := new(FlipResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *flagClient) Delete(ctx context.Context, in *DeleteRequest, opts ...client.CallOption) (*DeleteResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Flag.Delete", in)
	out := new(DeleteResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *flagClient) List(ctx context.Context, in *ListRequest, opts ...client.CallOption) (*ListResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Flag.List", in)
	out := new(ListResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Flag service

type FlagHandler interface {
	Create(context.Context, *CreateRequest, *CreateResponse) error
	Read(context.Context, *ReadRequest, *ReadResponse) error
	Flip(context.Context, *FlipRequest, *FlipResponse) error
	Delete(context.Context, *DeleteRequest, *DeleteResponse) error
	List(context.Context, *ListRequest, *ListResponse) error
}

func RegisterFlagHandler(s server.Server, hdlr FlagHandler) {
	s.Handle(s.NewHandler(&Flag{hdlr}))
}

type Flag struct {
	FlagHandler
}

func (h *Flag) Create(ctx context.Context, in *CreateRequest, out *CreateResponse) error {
	return h.FlagHandler.Create(ctx, in, out)
}

func (h *Flag) Read(ctx context.Context, in *ReadRequest, out *ReadResponse) error {
	return h.FlagHandler.Read(ctx, in, out)
}

func (h *Flag) Flip(ctx context.Context, in *FlipRequest, out *FlipResponse) error {
	return h.FlagHandler.Flip(ctx, in, out)
}

func (h *Flag) Delete(ctx context.Context, in *DeleteRequest, out *DeleteResponse) error {
	return h.FlagHandler.Delete(ctx, in, out)
}

func (h *Flag) List(ctx context.Context, in *ListRequest, out *ListResponse) error {
	return h.FlagHandler.List(ctx, in, out)
}

var fileDescriptor0 = []byte{
	// 329 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x93, 0xd1, 0x4a, 0xc3, 0x30,
	0x14, 0x86, 0x3b, 0x3b, 0x8b, 0x9e, 0xae, 0x43, 0xe3, 0x4d, 0x19, 0xa2, 0xb3, 0x57, 0xbb, 0x4a,
	0x65, 0x3e, 0x80, 0x82, 0x32, 0x10, 0x04, 0x61, 0x6f, 0xd0, 0x75, 0xc7, 0x1a, 0xd6, 0x2d, 0x35,
	0x49, 0x07, 0xfa, 0x06, 0xbe, 0xb5, 0x4d, 0xd3, 0x41, 0xab, 0x51, 0xd9, 0x4d, 0xe1, 0xe4, 0x9c,
	0xfe, 0xf9, 0xce, 0xff, 0x13, 0xb8, 0xce, 0x98, 0x7a, 0x2d, 0x17, 0x34, 0xe5, 0xeb, 0x78, 0x95,
	0x7c, 0xf0, 0xb2, 0x88, 0x5f, 0xf2, 0x24, 0x8b, 0xa5, 0xd8, 0xc6, 0x85, 0xe0, 0x8a, 0x9b, 0x52,
	0x7f, 0x68, 0x5d, 0x93, 0xd3, 0x8c, 0xd3, 0x35, 0x4b, 0x05, 0xa7, 0xd5, 0x0c, 0xd5, 0x8d, 0xe8,
	0x0e, 0x82, 0x7b, 0x81, 0x89, 0xc2, 0x39, 0xbe, 0x95, 0x28, 0x15, 0xf1, 0xc1, 0x5d, 0xe1, 0x7b,
	0xd8, 0x1b, 0xf7, 0x26, 0xc7, 0xe4, 0x0c, 0xfc, 0x25, 0xca, 0x54, 0xb0, 0x42, 0x31, 0xbe, 0x09,
	0x0f, 0xea, 0xc3, 0x00, 0x0e, 0xb7, 0x49, 0x5e, 0x62, 0xe8, 0x56, 0xe5, 0x51, 0x74, 0x02, 0xc3,
	0x9d, 0x82, 0x2c, 0xf8, 0x46, 0x62, 0x34, 0x02, 0x7f, 0x8e, 0xc9, 0xd2, 0xa6, 0x18, 0xdd, 0xc2,
	0xc0, 0xf4, 0xcc, 0xec, 0xfe, 0xd7, 0x55, 0xe2, 0xb3, 0x9c, 0x15, 0x56, 0xf1, 0x21, 0x0c, 0x4c,
	0xaf, 0x01, 0x39, 0x87, 0xe0, 0x01, 0x73, 0xb4, 0x2f, 0xa7, 0xc1, 0x77, 0xdd, 0x66, 0x3e, 0x00,
	0xff, 0x89, 0x49, 0xd5, 0x4c, 0x6b, 0x56, 0x53, 0x36, 0xac, 0x31, 0x78, 0x02, 0x65, 0x99, 0xab,
	0x4a, 0xc0, 0x9d, 0xf8, 0xd3, 0x4b, 0xfa, 0xc3, 0x4f, 0xda, 0x5e, 0x6e, 0xfa, 0xe9, 0x42, 0x7f,
	0x56, 0x9d, 0x92, 0x67, 0xf0, 0x8c, 0x47, 0x64, 0x6c, 0xf9, 0xa7, 0x13, 0xc0, 0xe8, 0xea, 0x8f,
	0x89, 0x86, 0xd3, 0x21, 0x8f, 0xd0, 0xd7, 0x37, 0x91, 0x8b, 0x5f, 0x11, 0x8c, 0xd8, 0x7f, 0x88,
	0x46, 0x4a, 0x9b, 0x66, 0x95, 0x6a, 0x39, 0x6d, 0x95, 0xea, 0xb8, 0xed, 0xe8, 0x35, 0x8d, 0xa3,
	0xd6, 0x35, 0x3b, 0x51, 0x58, 0xd7, 0xfc, 0x16, 0x47, 0xcd, 0xa6, 0x13, 0xb0, 0xb2, 0xb5, 0x92,
	0xb2, 0xb2, 0xb5, 0xa3, 0x8b, 0x9c, 0x85, 0x57, 0x3f, 0x81, 0x9b, 0xaf, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xbc, 0xb7, 0x85, 0x61, 0x36, 0x03, 0x00, 0x00,
}
