// Code generated by protoc-gen-go.
// source: github.com/kazoup/policy/srv/proto/policy/policy.proto
// DO NOT EDIT!

/*
Package go_micro_srv_policy is a generated protocol buffer package.

It is generated from these files:
	github.com/kazoup/policy/srv/proto/policy/policy.proto

It has these top-level messages:
	CreateRequest
	CreateResponse
	ReadRequest
	ReadResponse
	DeleteRequest
	DeleteResponse
	ListRequest
	ListResponse
*/
package go_micro_srv_policy

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type CreateRequest struct {
	Created          string `protobuf:"bytes,1,opt,name=created" json:"created,omitempty"`
	CreatedBy        string `protobuf:"bytes,2,opt,name=created_by,json=createdBy" json:"created_by,omitempty"`
	Filter           string `protobuf:"bytes,3,opt,name=filter" json:"filter,omitempty"`
	FilterRaw        string `protobuf:"bytes,4,opt,name=filter_raw,json=filterRaw" json:"filter_raw,omitempty"`
	IsArchivePolicy  bool   `protobuf:"varint,5,opt,name=is_archive_policy,json=isArchivePolicy" json:"is_archive_policy,omitempty"`
	IsDeletionPolicy bool   `protobuf:"varint,6,opt,name=is_deletion_policy,json=isDeletionPolicy" json:"is_deletion_policy,omitempty"`
	Name             string `protobuf:"bytes,7,opt,name=name" json:"name,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type CreateResponse struct {
}

func (m *CreateResponse) Reset()                    { *m = CreateResponse{} }
func (m *CreateResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()               {}
func (*CreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type ReadRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *ReadRequest) Reset()                    { *m = ReadRequest{} }
func (m *ReadRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()               {}
func (*ReadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type ReadResponse struct {
	Created          string `protobuf:"bytes,1,opt,name=created" json:"created,omitempty"`
	CreatedBy        string `protobuf:"bytes,2,opt,name=created_by,json=createdBy" json:"created_by,omitempty"`
	Filter           string `protobuf:"bytes,3,opt,name=filter" json:"filter,omitempty"`
	FilterRaw        string `protobuf:"bytes,4,opt,name=filter_raw,json=filterRaw" json:"filter_raw,omitempty"`
	IsArchivePolicy  bool   `protobuf:"varint,5,opt,name=is_archive_policy,json=isArchivePolicy" json:"is_archive_policy,omitempty"`
	IsDeletionPolicy bool   `protobuf:"varint,6,opt,name=is_deletion_policy,json=isDeletionPolicy" json:"is_deletion_policy,omitempty"`
	Name             string `protobuf:"bytes,7,opt,name=name" json:"name,omitempty"`
}

func (m *ReadResponse) Reset()                    { *m = ReadResponse{} }
func (m *ReadResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()               {}
func (*ReadResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type DeleteRequest struct {
	Name string `protobuf:"bytes,8,opt,name=name" json:"name,omitempty"`
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type DeleteResponse struct {
}

func (m *DeleteResponse) Reset()                    { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()               {}
func (*DeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type ListRequest struct {
}

func (m *ListRequest) Reset()                    { *m = ListRequest{} }
func (m *ListRequest) String() string            { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()               {}
func (*ListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type ListResponse struct {
	Result []*ReadResponse `protobuf:"bytes,1,rep,name=result" json:"result,omitempty"`
}

func (m *ListResponse) Reset()                    { *m = ListResponse{} }
func (m *ListResponse) String() string            { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()               {}
func (*ListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ListResponse) GetResult() []*ReadResponse {
	if m != nil {
		return m.Result
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateRequest)(nil), "go.micro.srv.policy.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "go.micro.srv.policy.CreateResponse")
	proto.RegisterType((*ReadRequest)(nil), "go.micro.srv.policy.ReadRequest")
	proto.RegisterType((*ReadResponse)(nil), "go.micro.srv.policy.ReadResponse")
	proto.RegisterType((*DeleteRequest)(nil), "go.micro.srv.policy.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "go.micro.srv.policy.DeleteResponse")
	proto.RegisterType((*ListRequest)(nil), "go.micro.srv.policy.ListRequest")
	proto.RegisterType((*ListResponse)(nil), "go.micro.srv.policy.ListResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Example service

type ExampleClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error)
	Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...client.CallOption) (*DeleteResponse, error)
	List(ctx context.Context, in *ListRequest, opts ...client.CallOption) (*ListResponse, error)
}

type exampleClient struct {
	c           client.Client
	serviceName string
}

func NewExampleClient(serviceName string, c client.Client) ExampleClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "go.micro.srv.policy"
	}
	return &exampleClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *exampleClient) Create(ctx context.Context, in *CreateRequest, opts ...client.CallOption) (*CreateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Example.Create", in)
	out := new(CreateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *exampleClient) Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Example.Read", in)
	out := new(ReadResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *exampleClient) Delete(ctx context.Context, in *DeleteRequest, opts ...client.CallOption) (*DeleteResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Example.Delete", in)
	out := new(DeleteResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *exampleClient) List(ctx context.Context, in *ListRequest, opts ...client.CallOption) (*ListResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Example.List", in)
	out := new(ListResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Example service

type ExampleHandler interface {
	Create(context.Context, *CreateRequest, *CreateResponse) error
	Read(context.Context, *ReadRequest, *ReadResponse) error
	Delete(context.Context, *DeleteRequest, *DeleteResponse) error
	List(context.Context, *ListRequest, *ListResponse) error
}

func RegisterExampleHandler(s server.Server, hdlr ExampleHandler) {
	s.Handle(s.NewHandler(&Example{hdlr}))
}

type Example struct {
	ExampleHandler
}

func (h *Example) Create(ctx context.Context, in *CreateRequest, out *CreateResponse) error {
	return h.ExampleHandler.Create(ctx, in, out)
}

func (h *Example) Read(ctx context.Context, in *ReadRequest, out *ReadResponse) error {
	return h.ExampleHandler.Read(ctx, in, out)
}

func (h *Example) Delete(ctx context.Context, in *DeleteRequest, out *DeleteResponse) error {
	return h.ExampleHandler.Delete(ctx, in, out)
}

func (h *Example) List(ctx context.Context, in *ListRequest, out *ListResponse) error {
	return h.ExampleHandler.List(ctx, in, out)
}

var fileDescriptor0 = []byte{
	// 408 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xdc, 0x54, 0xd1, 0x6e, 0xda, 0x30,
	0x14, 0x25, 0xc0, 0x02, 0x5c, 0x60, 0x63, 0x9e, 0x34, 0x45, 0x93, 0x26, 0x41, 0x78, 0x41, 0xd3,
	0x94, 0x48, 0x4c, 0x9a, 0xb4, 0xc7, 0x6d, 0xed, 0x43, 0xa5, 0x56, 0xaa, 0xd2, 0x0f, 0x88, 0x4c,
	0x70, 0xc1, 0x6a, 0x82, 0x53, 0xdb, 0x81, 0xd2, 0xbf, 0xec, 0x7f, 0xb4, 0xff, 0xd0, 0x60, 0x3b,
	0x52, 0x40, 0x84, 0xbe, 0xf7, 0x29, 0xbe, 0xe7, 0x9e, 0x73, 0x7d, 0x7c, 0x6c, 0x05, 0x7e, 0x2f,
	0xa8, 0x5c, 0x66, 0x33, 0x2f, 0x62, 0x89, 0x7f, 0x87, 0x1f, 0x59, 0x96, 0xfa, 0x29, 0x8b, 0x69,
	0xb4, 0xf5, 0x05, 0x5f, 0xfb, 0x29, 0x67, 0x92, 0x15, 0x80, 0xfe, 0x78, 0x0a, 0x43, 0x5f, 0x16,
	0xcc, 0x4b, 0x68, 0xc4, 0x99, 0x97, 0xf3, 0x3c, 0xdd, 0x72, 0x5f, 0x2c, 0xe8, 0xff, 0xe7, 0x04,
	0x4b, 0x12, 0x90, 0xfb, 0x8c, 0x08, 0x89, 0x1c, 0x68, 0x45, 0x0a, 0x98, 0x3b, 0xd6, 0xd0, 0x9a,
	0x74, 0x82, 0xa2, 0x44, 0xdf, 0x01, 0xcc, 0x32, 0x9c, 0x6d, 0x9d, 0xba, 0x6a, 0x76, 0x0c, 0xf2,
	0x6f, 0x8b, 0xbe, 0x82, 0x7d, 0x4b, 0x63, 0x49, 0xb8, 0xd3, 0x50, 0x2d, 0x53, 0xed, 0x64, 0x7a,
	0x15, 0x72, 0xbc, 0x71, 0x9a, 0x5a, 0xa6, 0x91, 0x00, 0x6f, 0xd0, 0x0f, 0xf8, 0x4c, 0x45, 0x88,
	0x79, 0xb4, 0xa4, 0x6b, 0x12, 0x6a, 0x5b, 0xce, 0x87, 0x9c, 0xd5, 0x0e, 0x3e, 0x51, 0xf1, 0x57,
	0xe3, 0xd7, 0x0a, 0x46, 0x3f, 0x01, 0xe5, 0xdc, 0x39, 0x89, 0x89, 0xa4, 0x6c, 0x55, 0x90, 0x6d,
	0x45, 0x1e, 0x50, 0x71, 0x66, 0x1a, 0x86, 0x8d, 0xa0, 0xb9, 0xc2, 0x09, 0x71, 0x5a, 0x6a, 0x4b,
	0xb5, 0x76, 0x07, 0xf0, 0xb1, 0x38, 0xae, 0x48, 0xd9, 0x4a, 0x10, 0x77, 0x04, 0xdd, 0x80, 0xe0,
	0x79, 0x71, 0xfc, 0x42, 0x64, 0x95, 0x44, 0xcf, 0x16, 0xf4, 0x34, 0x47, 0x6b, 0xde, 0x79, 0x46,
	0x63, 0xe8, 0x2b, 0x16, 0x39, 0xcc, 0xa4, 0xbd, 0x1f, 0x64, 0x41, 0x32, 0x41, 0xf6, 0xa1, 0x7b,
	0x49, 0x85, 0x34, 0x22, 0xf7, 0x02, 0x7a, 0xba, 0x34, 0x99, 0xfd, 0x01, 0x9b, 0x13, 0x91, 0xc5,
	0x32, 0x8f, 0xac, 0x31, 0xe9, 0x4e, 0x47, 0xde, 0x91, 0xf7, 0xe8, 0x95, 0x63, 0x0e, 0x8c, 0x60,
	0xfa, 0x54, 0x87, 0xd6, 0xf9, 0x03, 0x4e, 0xd2, 0x98, 0xa0, 0x1b, 0xb0, 0xf5, 0x05, 0x22, 0xf7,
	0xe8, 0x80, 0xbd, 0xc7, 0xfc, 0x6d, 0x7c, 0x92, 0x63, 0x8c, 0xd7, 0xd0, 0x15, 0x34, 0x77, 0x1b,
	0xa3, 0xe1, 0x09, 0x4f, 0x7a, 0xe0, 0xdb, 0xae, 0xf3, 0x71, 0xb9, 0x47, 0x9d, 0x4d, 0x85, 0xc7,
	0xbd, 0x74, 0x2b, 0x3c, 0x1e, 0x84, 0xab, 0x3c, 0xee, 0xf2, 0xac, 0xf0, 0x58, 0x4a, 0xbe, 0xc2,
	0x63, 0xf9, 0x32, 0xdc, 0xda, 0xcc, 0x56, 0x3f, 0x85, 0x5f, 0xaf, 0x01, 0x00, 0x00, 0xff, 0xff,
	0x16, 0xcf, 0x02, 0x37, 0x4e, 0x04, 0x00, 0x00,
}
