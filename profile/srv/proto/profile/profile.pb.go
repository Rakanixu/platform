// Code generated by protoc-gen-go.
// source: github.com/kazoup/platform/profile/srv/proto/profile/profile.proto
// DO NOT EDIT!

/*
Package go_micro_srv_profile is a generated protocol buffer package.

It is generated from these files:
	github.com/kazoup/platform/profile/srv/proto/profile/profile.proto

It has these top-level messages:
	Profile
	ReadRequest
	ReadResponse
	UpdateRequest
	UpdateResponse
	DeleteRequest
	DeleteResponse
	HealthRequest
	HealthResponse
*/
package go_micro_srv_profile

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Profile struct {
	Email   string `protobuf:"bytes,1,opt,name=email" json:"email,omitempty"`
	Profile string `protobuf:"bytes,2,opt,name=profile" json:"profile,omitempty"`
}

func (m *Profile) Reset()                    { *m = Profile{} }
func (m *Profile) String() string            { return proto.CompactTextString(m) }
func (*Profile) ProtoMessage()               {}
func (*Profile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ReadRequest struct {
	StripeId string `protobuf:"bytes,1,opt,name=stripe_id,json=stripeId" json:"stripe_id,omitempty"`
}

func (m *ReadRequest) Reset()                    { *m = ReadRequest{} }
func (m *ReadRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()               {}
func (*ReadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type ReadResponse struct {
	Profile *Profile `protobuf:"bytes,1,opt,name=profile" json:"profile,omitempty"`
}

func (m *ReadResponse) Reset()                    { *m = ReadResponse{} }
func (m *ReadResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()               {}
func (*ReadResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ReadResponse) GetProfile() *Profile {
	if m != nil {
		return m.Profile
	}
	return nil
}

type UpdateRequest struct {
}

func (m *UpdateRequest) Reset()                    { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()               {}
func (*UpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type UpdateResponse struct {
}

func (m *UpdateResponse) Reset()                    { *m = UpdateResponse{} }
func (m *UpdateResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateResponse) ProtoMessage()               {}
func (*UpdateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type DeleteRequest struct {
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type DeleteResponse struct {
}

func (m *DeleteResponse) Reset()                    { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()               {}
func (*DeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type HealthRequest struct {
	Type string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
}

func (m *HealthRequest) Reset()                    { *m = HealthRequest{} }
func (m *HealthRequest) String() string            { return proto.CompactTextString(m) }
func (*HealthRequest) ProtoMessage()               {}
func (*HealthRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type HealthResponse struct {
	Status int64  `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Info   string `protobuf:"bytes,2,opt,name=info" json:"info,omitempty"`
}

func (m *HealthResponse) Reset()                    { *m = HealthResponse{} }
func (m *HealthResponse) String() string            { return proto.CompactTextString(m) }
func (*HealthResponse) ProtoMessage()               {}
func (*HealthResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func init() {
	proto.RegisterType((*Profile)(nil), "go.micro.srv.profile.Profile")
	proto.RegisterType((*ReadRequest)(nil), "go.micro.srv.profile.ReadRequest")
	proto.RegisterType((*ReadResponse)(nil), "go.micro.srv.profile.ReadResponse")
	proto.RegisterType((*UpdateRequest)(nil), "go.micro.srv.profile.UpdateRequest")
	proto.RegisterType((*UpdateResponse)(nil), "go.micro.srv.profile.UpdateResponse")
	proto.RegisterType((*DeleteRequest)(nil), "go.micro.srv.profile.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "go.micro.srv.profile.DeleteResponse")
	proto.RegisterType((*HealthRequest)(nil), "go.micro.srv.profile.HealthRequest")
	proto.RegisterType((*HealthResponse)(nil), "go.micro.srv.profile.HealthResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for ProfileSrv service

type ProfileSrvClient interface {
	Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error)
	Update(ctx context.Context, in *UpdateRequest, opts ...client.CallOption) (*UpdateResponse, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...client.CallOption) (*DeleteResponse, error)
	Health(ctx context.Context, in *HealthRequest, opts ...client.CallOption) (*HealthResponse, error)
}

type profileSrvClient struct {
	c           client.Client
	serviceName string
}

func NewProfileSrvClient(serviceName string, c client.Client) ProfileSrvClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "go.micro.srv.profile"
	}
	return &profileSrvClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *profileSrvClient) Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ProfileSrv.Read", in)
	out := new(ReadResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profileSrvClient) Update(ctx context.Context, in *UpdateRequest, opts ...client.CallOption) (*UpdateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ProfileSrv.Update", in)
	out := new(UpdateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profileSrvClient) Delete(ctx context.Context, in *DeleteRequest, opts ...client.CallOption) (*DeleteResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ProfileSrv.Delete", in)
	out := new(DeleteResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profileSrvClient) Health(ctx context.Context, in *HealthRequest, opts ...client.CallOption) (*HealthResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ProfileSrv.Health", in)
	out := new(HealthResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ProfileSrv service

type ProfileSrvHandler interface {
	Read(context.Context, *ReadRequest, *ReadResponse) error
	Update(context.Context, *UpdateRequest, *UpdateResponse) error
	Delete(context.Context, *DeleteRequest, *DeleteResponse) error
	Health(context.Context, *HealthRequest, *HealthResponse) error
}

func RegisterProfileSrvHandler(s server.Server, hdlr ProfileSrvHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&ProfileSrv{hdlr}, opts...))
}

type ProfileSrv struct {
	ProfileSrvHandler
}

func (h *ProfileSrv) Read(ctx context.Context, in *ReadRequest, out *ReadResponse) error {
	return h.ProfileSrvHandler.Read(ctx, in, out)
}

func (h *ProfileSrv) Update(ctx context.Context, in *UpdateRequest, out *UpdateResponse) error {
	return h.ProfileSrvHandler.Update(ctx, in, out)
}

func (h *ProfileSrv) Delete(ctx context.Context, in *DeleteRequest, out *DeleteResponse) error {
	return h.ProfileSrvHandler.Delete(ctx, in, out)
}

func (h *ProfileSrv) Health(ctx context.Context, in *HealthRequest, out *HealthResponse) error {
	return h.ProfileSrvHandler.Health(ctx, in, out)
}

func init() {
	proto.RegisterFile("github.com/kazoup/platform/profile/srv/proto/profile/profile.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 347 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x92, 0x41, 0x4f, 0xc2, 0x30,
	0x1c, 0xc5, 0x01, 0x11, 0xe4, 0x8f, 0xa0, 0x69, 0x88, 0x21, 0x18, 0x13, 0x2d, 0x1e, 0x8c, 0x87,
	0x2e, 0xc1, 0x83, 0x31, 0xf1, 0x64, 0x4c, 0xd4, 0x93, 0x66, 0x86, 0xb3, 0x29, 0xac, 0x40, 0xe3,
	0x46, 0xeb, 0xda, 0x91, 0xe8, 0xc7, 0xf5, 0x93, 0xe8, 0xda, 0x4e, 0x98, 0xd9, 0x38, 0xed, 0xdf,
	0xb7, 0xdf, 0x5e, 0x5f, 0x5f, 0x07, 0x77, 0x73, 0xae, 0x17, 0xc9, 0x84, 0x4c, 0x45, 0xe4, 0xbd,
	0xd3, 0x2f, 0x91, 0x48, 0x4f, 0x86, 0x54, 0xcf, 0x44, 0x1c, 0x79, 0x32, 0x16, 0x33, 0x1e, 0x32,
	0x4f, 0xc5, 0xab, 0x74, 0xd6, 0xe2, 0x4f, 0x71, 0x4f, 0x62, 0x54, 0xd4, 0x9b, 0x0b, 0x12, 0xf1,
	0x69, 0x2c, 0xc8, 0x2f, 0x49, 0xdc, 0x3b, 0x7c, 0x03, 0xcd, 0x17, 0x3b, 0xa2, 0x1e, 0xec, 0xb2,
	0x88, 0xf2, 0xb0, 0x5f, 0x3d, 0xad, 0x5e, 0xb4, 0x7c, 0xbb, 0x40, 0x7d, 0x68, 0x3a, 0xb6, 0x5f,
	0x33, 0x7a, 0xb6, 0xc4, 0x97, 0xd0, 0xf6, 0x19, 0x0d, 0x7c, 0xf6, 0x91, 0x30, 0xa5, 0xd1, 0x31,
	0xb4, 0x94, 0x8e, 0xb9, 0x64, 0x6f, 0x3c, 0x70, 0x16, 0x7b, 0x56, 0x78, 0x0a, 0xf0, 0x03, 0xec,
	0x5b, 0x56, 0x49, 0xb1, 0x54, 0x0c, 0x5d, 0xaf, 0x5d, 0x53, 0xb4, 0x3d, 0x3a, 0x21, 0x45, 0xf1,
	0x88, 0xcb, 0xb6, 0xde, 0xf4, 0x00, 0x3a, 0x63, 0x19, 0x50, 0xcd, 0xdc, 0xb6, 0xf8, 0x10, 0xba,
	0x99, 0x60, 0xbd, 0x53, 0xe4, 0x9e, 0x85, 0x2c, 0x87, 0x64, 0x82, 0x43, 0x86, 0xd0, 0x79, 0x64,
	0x34, 0xd4, 0x8b, 0x2c, 0x3c, 0x82, 0xba, 0xfe, 0x94, 0xcc, 0xe5, 0x36, 0x33, 0xbe, 0x85, 0x6e,
	0x06, 0xb9, 0xd4, 0x47, 0xd0, 0x50, 0x9a, 0xea, 0x44, 0x19, 0x6e, 0xc7, 0x77, 0xab, 0xf4, 0x6b,
	0xbe, 0x9c, 0x09, 0x57, 0x90, 0x99, 0x47, 0xdf, 0x35, 0x00, 0x97, 0xfe, 0x35, 0x5e, 0xa1, 0x67,
	0xa8, 0xa7, 0x05, 0xa0, 0xb3, 0xe2, 0x73, 0x6e, 0x14, 0x39, 0xc0, 0xdb, 0x10, 0x77, 0x80, 0x0a,
	0x1a, 0x43, 0xc3, 0x9e, 0x1b, 0x0d, 0x8b, 0xf9, 0x5c, 0x4d, 0x83, 0xf3, 0xed, 0xd0, 0xa6, 0xad,
	0xed, 0xaa, 0xcc, 0x36, 0x57, 0x6d, 0x99, 0xed, 0xbf, 0xba, 0x8d, 0xad, 0xed, 0xb2, 0xcc, 0x36,
	0x77, 0x1d, 0x65, 0xb6, 0xf9, 0xeb, 0xc0, 0x95, 0x49, 0xc3, 0xfc, 0xda, 0x57, 0x3f, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x9b, 0x18, 0x12, 0x60, 0x20, 0x03, 0x00, 0x00,
}
