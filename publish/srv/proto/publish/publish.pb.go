// Code generated by protoc-gen-go.
// source: github.com/kazoup/publish/srv/proto/publish/publish.proto
// DO NOT EDIT!

/*
Package go_micro_srv_publish is a generated protocol buffer package.

It is generated from these files:
	github.com/kazoup/publish/srv/proto/publish/publish.proto

It has these top-level messages:
	SendRequest
	SendResponse
*/
package go_micro_srv_publish

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type SendRequest struct {
	Topic     string `protobuf:"bytes,1,opt,name=topic" json:"topic,omitempty"`
	Id        string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Publisher string `protobuf:"bytes,3,opt,name=publisher" json:"publisher,omitempty"`
	Data      string `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
}

func (m *SendRequest) Reset()                    { *m = SendRequest{} }
func (m *SendRequest) String() string            { return proto.CompactTextString(m) }
func (*SendRequest) ProtoMessage()               {}
func (*SendRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type SendResponse struct {
}

func (m *SendResponse) Reset()                    { *m = SendResponse{} }
func (m *SendResponse) String() string            { return proto.CompactTextString(m) }
func (*SendResponse) ProtoMessage()               {}
func (*SendResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*SendRequest)(nil), "go.micro.srv.publish.SendRequest")
	proto.RegisterType((*SendResponse)(nil), "go.micro.srv.publish.SendResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Publish service

type PublishClient interface {
	Send(ctx context.Context, in *SendRequest, opts ...client.CallOption) (*SendResponse, error)
}

type publishClient struct {
	c           client.Client
	serviceName string
}

func NewPublishClient(serviceName string, c client.Client) PublishClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "go.micro.srv.publish"
	}
	return &publishClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *publishClient) Send(ctx context.Context, in *SendRequest, opts ...client.CallOption) (*SendResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Publish.Send", in)
	out := new(SendResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Publish service

type PublishHandler interface {
	Send(context.Context, *SendRequest, *SendResponse) error
}

func RegisterPublishHandler(s server.Server, hdlr PublishHandler) {
	s.Handle(s.NewHandler(&Publish{hdlr}))
}

type Publish struct {
	PublishHandler
}

func (h *Publish) Send(ctx context.Context, in *SendRequest, out *SendResponse) error {
	return h.PublishHandler.Send(ctx, in, out)
}

var fileDescriptor0 = []byte{
	// 192 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xb2, 0x4c, 0xcf, 0x2c, 0xc9,
	0x28, 0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0xcf, 0x4e, 0xac, 0xca, 0x2f, 0x2d, 0xd0, 0x2f, 0x28,
	0x4d, 0xca, 0xc9, 0x2c, 0xce, 0xd0, 0x2f, 0x2e, 0x2a, 0xd3, 0x2f, 0x28, 0xca, 0x2f, 0xc9, 0x87,
	0x8b, 0x40, 0x69, 0x3d, 0xb0, 0xa8, 0x90, 0x48, 0x7a, 0xbe, 0x5e, 0x6e, 0x66, 0x72, 0x51, 0xbe,
	0x1e, 0x50, 0xa5, 0x1e, 0x54, 0x4e, 0xc9, 0x93, 0x8b, 0x3b, 0x38, 0x35, 0x2f, 0x25, 0x28, 0xb5,
	0xb0, 0x34, 0xb5, 0xb8, 0x44, 0x88, 0x97, 0x8b, 0xb5, 0x24, 0xbf, 0x20, 0x33, 0x59, 0x82, 0x51,
	0x81, 0x51, 0x83, 0x53, 0x88, 0x8b, 0x8b, 0x29, 0x33, 0x45, 0x82, 0x09, 0xcc, 0x16, 0xe4, 0xe2,
	0x84, 0x6a, 0x4a, 0x2d, 0x92, 0x60, 0x06, 0x0b, 0xf1, 0x70, 0xb1, 0xa4, 0x24, 0x96, 0x24, 0x4a,
	0xb0, 0x80, 0x78, 0x4a, 0x7c, 0x5c, 0x3c, 0x10, 0xa3, 0x8a, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x8d,
	0xa2, 0xb8, 0xd8, 0x03, 0x20, 0x1a, 0x84, 0xfc, 0xb9, 0x58, 0x40, 0x52, 0x42, 0x8a, 0x7a, 0xd8,
	0x1c, 0xa1, 0x87, 0xe4, 0x02, 0x29, 0x25, 0x7c, 0x4a, 0x20, 0x26, 0x2b, 0x31, 0x24, 0xb1, 0x81,
	0xfd, 0x64, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x1e, 0x4c, 0x41, 0x1b, 0x10, 0x01, 0x00, 0x00,
}
