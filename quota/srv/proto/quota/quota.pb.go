// Code generated by protoc-gen-go.
// source: github.com/kazoup/platform/quota/srv/proto/quota/quota.proto
// DO NOT EDIT!

/*
Package go_micro_srv_quota is a generated protocol buffer package.

It is generated from these files:
	github.com/kazoup/platform/quota/srv/proto/quota/quota.proto

It has these top-level messages:
	Quota
	ReadRequest
	ReadResponse
	SearchRequest
	SearchResponse
	HealthRequest
	HealthResponse
*/
package go_micro_srv_quota

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Quota struct {
	Name           string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Icon           string `protobuf:"bytes,2,opt,name=icon" json:"icon,omitempty"`
	Rate           int64  `protobuf:"varint,3,opt,name=rate" json:"rate,omitempty"`
	ResetTimestamp int64  `protobuf:"varint,4,opt,name=reset_timestamp,json=resetTimestamp" json:"reset_timestamp,omitempty"`
	Quota          int64  `protobuf:"varint,5,opt,name=quota" json:"quota,omitempty"`
}

func (m *Quota) Reset()                    { *m = Quota{} }
func (m *Quota) String() string            { return proto.CompactTextString(m) }
func (*Quota) ProtoMessage()               {}
func (*Quota) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ReadRequest struct {
	Srv string `protobuf:"bytes,1,opt,name=srv" json:"srv,omitempty"`
}

func (m *ReadRequest) Reset()                    { *m = ReadRequest{} }
func (m *ReadRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()               {}
func (*ReadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type ReadResponse struct {
	TimeLimit string `protobuf:"bytes,1,opt,name=time_limit,json=timeLimit" json:"time_limit,omitempty"`
	Quota     *Quota `protobuf:"bytes,2,opt,name=quota" json:"quota,omitempty"`
}

func (m *ReadResponse) Reset()                    { *m = ReadResponse{} }
func (m *ReadResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()               {}
func (*ReadResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ReadResponse) GetQuota() *Quota {
	if m != nil {
		return m.Quota
	}
	return nil
}

type SearchRequest struct {
}

func (m *SearchRequest) Reset()                    { *m = SearchRequest{} }
func (m *SearchRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()               {}
func (*SearchRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type SearchResponse struct {
	TimeLimit string   `protobuf:"bytes,1,opt,name=time_limit,json=timeLimit" json:"time_limit,omitempty"`
	Quota     []*Quota `protobuf:"bytes,2,rep,name=quota" json:"quota,omitempty"`
}

func (m *SearchResponse) Reset()                    { *m = SearchResponse{} }
func (m *SearchResponse) String() string            { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()               {}
func (*SearchResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *SearchResponse) GetQuota() []*Quota {
	if m != nil {
		return m.Quota
	}
	return nil
}

type HealthRequest struct {
	Type string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
}

func (m *HealthRequest) Reset()                    { *m = HealthRequest{} }
func (m *HealthRequest) String() string            { return proto.CompactTextString(m) }
func (*HealthRequest) ProtoMessage()               {}
func (*HealthRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type HealthResponse struct {
	Status int64  `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Info   string `protobuf:"bytes,2,opt,name=info" json:"info,omitempty"`
}

func (m *HealthResponse) Reset()                    { *m = HealthResponse{} }
func (m *HealthResponse) String() string            { return proto.CompactTextString(m) }
func (*HealthResponse) ProtoMessage()               {}
func (*HealthResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func init() {
	proto.RegisterType((*Quota)(nil), "go.micro.srv.quota.Quota")
	proto.RegisterType((*ReadRequest)(nil), "go.micro.srv.quota.ReadRequest")
	proto.RegisterType((*ReadResponse)(nil), "go.micro.srv.quota.ReadResponse")
	proto.RegisterType((*SearchRequest)(nil), "go.micro.srv.quota.SearchRequest")
	proto.RegisterType((*SearchResponse)(nil), "go.micro.srv.quota.SearchResponse")
	proto.RegisterType((*HealthRequest)(nil), "go.micro.srv.quota.HealthRequest")
	proto.RegisterType((*HealthResponse)(nil), "go.micro.srv.quota.HealthResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for QuotaSrv service

type QuotaSrvClient interface {
	Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error)
	Search(ctx context.Context, in *SearchRequest, opts ...client.CallOption) (*SearchResponse, error)
	Health(ctx context.Context, in *HealthRequest, opts ...client.CallOption) (*HealthResponse, error)
}

type quotaSrvClient struct {
	c           client.Client
	serviceName string
}

func NewQuotaSrvClient(serviceName string, c client.Client) QuotaSrvClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "go.micro.srv.quota"
	}
	return &quotaSrvClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *quotaSrvClient) Read(ctx context.Context, in *ReadRequest, opts ...client.CallOption) (*ReadResponse, error) {
	req := c.c.NewRequest(c.serviceName, "QuotaSrv.Read", in)
	out := new(ReadResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *quotaSrvClient) Search(ctx context.Context, in *SearchRequest, opts ...client.CallOption) (*SearchResponse, error) {
	req := c.c.NewRequest(c.serviceName, "QuotaSrv.Search", in)
	out := new(SearchResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *quotaSrvClient) Health(ctx context.Context, in *HealthRequest, opts ...client.CallOption) (*HealthResponse, error) {
	req := c.c.NewRequest(c.serviceName, "QuotaSrv.Health", in)
	out := new(HealthResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for QuotaSrv service

type QuotaSrvHandler interface {
	Read(context.Context, *ReadRequest, *ReadResponse) error
	Search(context.Context, *SearchRequest, *SearchResponse) error
	Health(context.Context, *HealthRequest, *HealthResponse) error
}

func RegisterQuotaSrvHandler(s server.Server, hdlr QuotaSrvHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&QuotaSrv{hdlr}, opts...))
}

type QuotaSrv struct {
	QuotaSrvHandler
}

func (h *QuotaSrv) Read(ctx context.Context, in *ReadRequest, out *ReadResponse) error {
	return h.QuotaSrvHandler.Read(ctx, in, out)
}

func (h *QuotaSrv) Search(ctx context.Context, in *SearchRequest, out *SearchResponse) error {
	return h.QuotaSrvHandler.Search(ctx, in, out)
}

func (h *QuotaSrv) Health(ctx context.Context, in *HealthRequest, out *HealthResponse) error {
	return h.QuotaSrvHandler.Health(ctx, in, out)
}

func init() {
	proto.RegisterFile("github.com/kazoup/platform/quota/srv/proto/quota/quota.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 375 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x52, 0x41, 0x4f, 0xf2, 0x40,
	0x14, 0xa4, 0x5f, 0x81, 0x7c, 0x3c, 0x04, 0xcc, 0xc6, 0x98, 0x4a, 0x62, 0xc0, 0xf5, 0xa0, 0xa7,
	0x36, 0xc1, 0x2b, 0x3f, 0xc0, 0x44, 0x2f, 0x14, 0xcf, 0xe2, 0x52, 0x17, 0x68, 0x64, 0xbb, 0x65,
	0xbb, 0x25, 0xd1, 0xa3, 0xff, 0xdb, 0xc4, 0xee, 0x6b, 0x4b, 0x20, 0x56, 0xa3, 0x97, 0x66, 0x76,
	0x76, 0xf2, 0x66, 0xde, 0x6c, 0x61, 0xbc, 0x0c, 0xf5, 0x2a, 0x9d, 0xbb, 0x81, 0x14, 0xde, 0x0b,
	0x7b, 0x93, 0x69, 0xec, 0xc5, 0x6b, 0xa6, 0x17, 0x52, 0x09, 0x6f, 0x93, 0x4a, 0xcd, 0xbc, 0x44,
	0x6d, 0xbd, 0x58, 0x49, 0x2d, 0x8b, 0x33, 0x7e, 0x5d, 0x64, 0x08, 0x59, 0x4a, 0x57, 0x84, 0x81,
	0x92, 0x6e, 0xa6, 0x72, 0xf1, 0x86, 0xbe, 0x5b, 0xd0, 0x98, 0x18, 0x44, 0x08, 0xd4, 0x23, 0x26,
	0xb8, 0x63, 0x0d, 0xad, 0xeb, 0x96, 0x8f, 0xd8, 0x70, 0x61, 0x20, 0x23, 0xe7, 0x5f, 0xce, 0x19,
	0x6c, 0x38, 0xc5, 0x34, 0x77, 0xec, 0x8c, 0xb3, 0x7d, 0xc4, 0xe4, 0x0a, 0x7a, 0x8a, 0x27, 0x5c,
	0xcf, 0x74, 0x28, 0x78, 0xa2, 0x99, 0x88, 0x9d, 0x3a, 0x5e, 0x77, 0x91, 0x7e, 0x28, 0x59, 0x72,
	0x02, 0x0d, 0xf4, 0x75, 0x1a, 0x78, 0x9d, 0x1f, 0xe8, 0x00, 0xda, 0x3e, 0x67, 0xcf, 0x3e, 0xdf,
	0xa4, 0x99, 0x8e, 0x1c, 0x83, 0x9d, 0x05, 0x2c, 0x82, 0x18, 0x48, 0x1f, 0xe1, 0x28, 0x17, 0x24,
	0xb1, 0x8c, 0x12, 0x4e, 0xce, 0x01, 0x8c, 0xd3, 0x6c, 0x1d, 0x8a, 0x50, 0x17, 0xc2, 0x96, 0x61,
	0xee, 0x0d, 0x41, 0xbc, 0xd2, 0xc5, 0xe4, 0x6e, 0x8f, 0xce, 0xdc, 0xaf, 0x8b, 0xbb, 0xb8, 0x74,
	0x19, 0xa0, 0x07, 0x9d, 0x29, 0x67, 0x2a, 0x58, 0x15, 0x11, 0xe8, 0x13, 0x74, 0x4b, 0xe2, 0xcf,
	0x96, 0xf6, 0xaf, 0x2c, 0x2f, 0xa1, 0x73, 0xcb, 0xd9, 0x5a, 0x97, 0x96, 0xa6, 0x57, 0xfd, 0x1a,
	0xef, 0xfa, 0x37, 0x98, 0x8e, 0xa1, 0x5b, 0x8a, 0x8a, 0x18, 0xa7, 0xd0, 0xcc, 0x9a, 0xd4, 0x69,
	0x82, 0x3a, 0xdb, 0x2f, 0x4e, 0xf8, 0x52, 0xd1, 0x42, 0xee, 0x5e, 0x2a, 0xc3, 0xa3, 0x0f, 0x0b,
	0xfe, 0xa3, 0xe7, 0x54, 0x6d, 0xc9, 0x1d, 0xd4, 0x4d, 0x85, 0x64, 0x50, 0x95, 0x6c, 0xaf, 0xfd,
	0xfe, 0xf0, 0x7b, 0x41, 0x9e, 0x81, 0xd6, 0xc8, 0x04, 0x9a, 0x79, 0x3d, 0xe4, 0xa2, 0x4a, 0x7d,
	0xd0, 0x65, 0x9f, 0xfe, 0x24, 0xd9, 0x1f, 0x99, 0xaf, 0x5a, 0x3d, 0xf2, 0xa0, 0xab, 0xea, 0x91,
	0x87, 0x4d, 0xd1, 0xda, 0xbc, 0x89, 0xbf, 0xfd, 0xcd, 0x67, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb1,
	0x0a, 0xc3, 0xe9, 0x36, 0x03, 0x00, 0x00,
}
