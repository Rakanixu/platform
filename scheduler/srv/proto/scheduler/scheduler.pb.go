// Code generated by protoc-gen-go.
// source: github.com/kazoup/platform/scheduler/srv/proto/scheduler/scheduler.proto
// DO NOT EDIT!

/*
Package go_micro_srv_scheduler is a generated protocol buffer package.

It is generated from these files:
	github.com/kazoup/platform/scheduler/srv/proto/scheduler/scheduler.proto

It has these top-level messages:
	Task
	Schedule
	CreateScheduledTaskRequest
	CreateScheduledTaskResponse
*/
package go_micro_srv_scheduler

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Task struct {
	Id     string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Action string `protobuf:"bytes,2,opt,name=action" json:"action,omitempty"`
}

func (m *Task) Reset()                    { *m = Task{} }
func (m *Task) String() string            { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()               {}
func (*Task) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Schedule struct {
	IntervalSeconds int64 `protobuf:"varint,1,opt,name=interval_seconds,json=intervalSeconds" json:"interval_seconds,omitempty"`
}

func (m *Schedule) Reset()                    { *m = Schedule{} }
func (m *Schedule) String() string            { return proto.CompactTextString(m) }
func (*Schedule) ProtoMessage()               {}
func (*Schedule) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type CreateScheduledTaskRequest struct {
	Task     *Task     `protobuf:"bytes,1,opt,name=task" json:"task,omitempty"`
	Schedule *Schedule `protobuf:"bytes,2,opt,name=schedule" json:"schedule,omitempty"`
}

func (m *CreateScheduledTaskRequest) Reset()                    { *m = CreateScheduledTaskRequest{} }
func (m *CreateScheduledTaskRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateScheduledTaskRequest) ProtoMessage()               {}
func (*CreateScheduledTaskRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CreateScheduledTaskRequest) GetTask() *Task {
	if m != nil {
		return m.Task
	}
	return nil
}

func (m *CreateScheduledTaskRequest) GetSchedule() *Schedule {
	if m != nil {
		return m.Schedule
	}
	return nil
}

type CreateScheduledTaskResponse struct {
}

func (m *CreateScheduledTaskResponse) Reset()                    { *m = CreateScheduledTaskResponse{} }
func (m *CreateScheduledTaskResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateScheduledTaskResponse) ProtoMessage()               {}
func (*CreateScheduledTaskResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func init() {
	proto.RegisterType((*Task)(nil), "go.micro.srv.scheduler.Task")
	proto.RegisterType((*Schedule)(nil), "go.micro.srv.scheduler.Schedule")
	proto.RegisterType((*CreateScheduledTaskRequest)(nil), "go.micro.srv.scheduler.CreateScheduledTaskRequest")
	proto.RegisterType((*CreateScheduledTaskResponse)(nil), "go.micro.srv.scheduler.CreateScheduledTaskResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Scheduler service

type SchedulerClient interface {
	CreateScheduledTask(ctx context.Context, in *CreateScheduledTaskRequest, opts ...client.CallOption) (*CreateScheduledTaskResponse, error)
}

type schedulerClient struct {
	c           client.Client
	serviceName string
}

func NewSchedulerClient(serviceName string, c client.Client) SchedulerClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "go.micro.srv.scheduler"
	}
	return &schedulerClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *schedulerClient) CreateScheduledTask(ctx context.Context, in *CreateScheduledTaskRequest, opts ...client.CallOption) (*CreateScheduledTaskResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Scheduler.CreateScheduledTask", in)
	out := new(CreateScheduledTaskResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Scheduler service

type SchedulerHandler interface {
	CreateScheduledTask(context.Context, *CreateScheduledTaskRequest, *CreateScheduledTaskResponse) error
}

func RegisterSchedulerHandler(s server.Server, hdlr SchedulerHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Scheduler{hdlr}, opts...))
}

type Scheduler struct {
	SchedulerHandler
}

func (h *Scheduler) CreateScheduledTask(ctx context.Context, in *CreateScheduledTaskRequest, out *CreateScheduledTaskResponse) error {
	return h.SchedulerHandler.CreateScheduledTask(ctx, in, out)
}

func init() {
	proto.RegisterFile("github.com/kazoup/platform/scheduler/srv/proto/scheduler/scheduler.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 274 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x91, 0x31, 0x4f, 0xc3, 0x30,
	0x10, 0x85, 0x71, 0xa9, 0xaa, 0xf6, 0x2a, 0x01, 0x32, 0x52, 0x55, 0x15, 0x90, 0x2a, 0x4f, 0xb0,
	0xd8, 0x28, 0x15, 0x1b, 0x1b, 0x0b, 0x73, 0xca, 0x8e, 0x5c, 0xc7, 0xb4, 0x56, 0x93, 0x5c, 0xb0,
	0x9d, 0x0e, 0x4c, 0xfc, 0x00, 0xc4, 0x6f, 0x26, 0xb8, 0x75, 0xc5, 0x90, 0x0c, 0x6c, 0x77, 0xef,
	0xde, 0x97, 0xf7, 0x22, 0xc3, 0xf3, 0xda, 0xf8, 0x4d, 0xbd, 0xe2, 0x0a, 0x0b, 0xb1, 0x95, 0x1f,
	0x58, 0x57, 0xa2, 0xca, 0xa5, 0x7f, 0x43, 0x5b, 0x08, 0xa7, 0x36, 0x3a, 0xab, 0x73, 0x6d, 0x85,
	0xb3, 0x3b, 0x51, 0x59, 0xf4, 0xf8, 0x57, 0x8b, 0x13, 0x0f, 0x17, 0x3a, 0x59, 0x23, 0x2f, 0x8c,
	0xb2, 0xc8, 0x1b, 0x37, 0x3f, 0x5e, 0x19, 0x87, 0xfe, 0x8b, 0x74, 0x5b, 0x7a, 0x06, 0x3d, 0x93,
	0x4d, 0xc9, 0x9c, 0xdc, 0x8e, 0xd2, 0x66, 0xa2, 0x13, 0x18, 0x48, 0xe5, 0x0d, 0x96, 0xd3, 0x5e,
	0xd0, 0x0e, 0x1b, 0x7b, 0x80, 0xe1, 0xf2, 0x00, 0xd3, 0x3b, 0xb8, 0x30, 0xa5, 0xd7, 0x76, 0x27,
	0xf3, 0x57, 0xa7, 0x15, 0x96, 0x99, 0x0b, 0x5f, 0x38, 0x4d, 0xcf, 0xa3, 0xbe, 0xdc, 0xcb, 0xec,
	0x8b, 0xc0, 0xec, 0xc9, 0x6a, 0xe9, 0x75, 0xa4, 0xb3, 0xdf, 0xd8, 0x54, 0xbf, 0xd7, 0xda, 0x79,
	0x7a, 0x0f, 0x7d, 0xdf, 0xac, 0x81, 0x1e, 0x27, 0xd7, 0xbc, 0xbd, 0x2c, 0x0f, 0x48, 0x70, 0xd2,
	0x47, 0x18, 0x46, 0x3d, 0x34, 0x1c, 0x27, 0xf3, 0x2e, 0x2a, 0x26, 0xa6, 0x47, 0x82, 0xdd, 0xc0,
	0x55, 0x6b, 0x1b, 0x57, 0x61, 0xe9, 0x74, 0xf2, 0x4d, 0x60, 0x14, 0x2f, 0x96, 0x7e, 0x12, 0xb8,
	0x6c, 0x71, 0xd3, 0xa4, 0x2b, 0xb0, 0xfb, 0x47, 0x67, 0x8b, 0x7f, 0x31, 0xfb, 0x3a, 0xec, 0x64,
	0x35, 0x08, 0x8f, 0xb8, 0xf8, 0x09, 0x00, 0x00, 0xff, 0xff, 0x69, 0x73, 0x31, 0x54, 0x10, 0x02,
	0x00, 0x00,
}
