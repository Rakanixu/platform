// Code generated by protoc-gen-go.
// source: github.com/kazoup/platform/search/srv/proto/search/search.proto
// DO NOT EDIT!

/*
Package search is a generated protocol buffer package.

It is generated from these files:
	github.com/kazoup/platform/search/srv/proto/search/search.proto

It has these top-level messages:
	SearchRequest
	SearchResponse
*/
package search

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type SearchRequest struct {
	Term     string `protobuf:"bytes,1,opt,name=term" json:"term,omitempty"`
	From     int64  `protobuf:"varint,2,opt,name=from" json:"from,omitempty"`
	Size     int64  `protobuf:"varint,3,opt,name=size" json:"size,omitempty"`
	Category string `protobuf:"bytes,4,opt,name=category" json:"category,omitempty"`
	Url      string `protobuf:"bytes,5,opt,name=url" json:"url,omitempty"`
	Depth    int64  `protobuf:"varint,6,opt,name=depth" json:"depth,omitempty"`
}

func (m *SearchRequest) Reset()                    { *m = SearchRequest{} }
func (m *SearchRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()               {}
func (*SearchRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type SearchResponse struct {
	Result string `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
}

func (m *SearchResponse) Reset()                    { *m = SearchResponse{} }
func (m *SearchResponse) String() string            { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()               {}
func (*SearchResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*SearchRequest)(nil), "SearchRequest")
	proto.RegisterType((*SearchResponse)(nil), "SearchResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Search service

type SearchClient interface {
	Search(ctx context.Context, in *SearchRequest, opts ...client.CallOption) (*SearchResponse, error)
}

type searchClient struct {
	c           client.Client
	serviceName string
}

func NewSearchClient(serviceName string, c client.Client) SearchClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "search"
	}
	return &searchClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *searchClient) Search(ctx context.Context, in *SearchRequest, opts ...client.CallOption) (*SearchResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Search.Search", in)
	out := new(SearchResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Search service

type SearchHandler interface {
	Search(context.Context, *SearchRequest, *SearchResponse) error
}

func RegisterSearchHandler(s server.Server, hdlr SearchHandler) {
	s.Handle(s.NewHandler(&Search{hdlr}))
}

type Search struct {
	SearchHandler
}

func (h *Search) Search(ctx context.Context, in *SearchRequest, out *SearchResponse) error {
	return h.SearchHandler.Search(ctx, in, out)
}

var fileDescriptor0 = []byte{
	// 223 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x54, 0x8f, 0x51, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0x8d, 0x69, 0x83, 0x0e, 0x58, 0x65, 0x11, 0x59, 0xfa, 0x24, 0x79, 0x2a, 0x08, 0x59,
	0x50, 0x7c, 0xf6, 0x0e, 0xf1, 0x04, 0x69, 0x9c, 0x36, 0xc5, 0xc4, 0x59, 0x67, 0x67, 0x05, 0x7b,
	0x09, 0xaf, 0xac, 0x3b, 0xa9, 0x81, 0x3c, 0xed, 0xf7, 0x7f, 0xec, 0x0c, 0xf3, 0xc3, 0xcb, 0xfe,
	0x20, 0x5d, 0xdc, 0x56, 0x2d, 0x0d, 0xee, 0xbd, 0x39, 0x52, 0xf4, 0xce, 0xf7, 0x8d, 0xec, 0x88,
	0x07, 0x17, 0xb0, 0xe1, 0xb6, 0x73, 0x81, 0xbf, 0x9c, 0x67, 0x12, 0x9a, 0x84, 0x3e, 0x95, 0xba,
	0xf2, 0x27, 0x83, 0xab, 0x57, 0x15, 0x35, 0x7e, 0x46, 0x0c, 0x62, 0x0c, 0x2c, 0x04, 0x79, 0xb0,
	0xd9, 0x7d, 0xb6, 0xb9, 0xac, 0x95, 0x93, 0xdb, 0x31, 0x0d, 0xf6, 0xfc, 0xcf, 0xe5, 0xb5, 0x72,
	0x72, 0xe1, 0x70, 0x44, 0x9b, 0x8f, 0x2e, 0xb1, 0x59, 0xc3, 0x45, 0xdb, 0x08, 0xee, 0x89, 0xbf,
	0xed, 0x42, 0xe7, 0xa7, 0x6c, 0x6e, 0x20, 0x8f, 0xdc, 0xdb, 0xa5, 0xea, 0x84, 0xe6, 0x16, 0x96,
	0x6f, 0xe8, 0xa5, 0xb3, 0x85, 0xae, 0x18, 0x43, 0xb9, 0x81, 0xd5, 0xff, 0x41, 0xc1, 0xd3, 0x47,
	0x40, 0x73, 0x07, 0x05, 0x63, 0x88, 0xbd, 0x9c, 0x6e, 0x3a, 0xa5, 0xc7, 0x67, 0x28, 0xc6, 0x9f,
	0xe6, 0x61, 0xa2, 0x55, 0x35, 0x6b, 0xb3, 0xbe, 0xae, 0xe6, 0xcb, 0xca, 0xb3, 0x6d, 0xa1, 0xcd,
	0x9f, 0x7e, 0x03, 0x00, 0x00, 0xff, 0xff, 0x0d, 0xee, 0x3e, 0xcd, 0x3c, 0x01, 0x00, 0x00,
}
