// Code generated by protoc-gen-go.
// source: github.com/kazoup/platform/translate/srv/proto/translate/translate.proto
// DO NOT EDIT!

/*
Package proto_translate is a generated protocol buffer package.

It is generated from these files:
	github.com/kazoup/platform/translate/srv/proto/translate/translate.proto

It has these top-level messages:
	TranslateRequest
	TranslateResponse
*/
package proto_translate

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TranslateRequest struct {
	Text       []string `protobuf:"bytes,1,rep,name=text" json:"text,omitempty"`
	SourceLang string   `protobuf:"bytes,2,opt,name=sourceLang" json:"sourceLang,omitempty"`
	DestLang   string   `protobuf:"bytes,3,opt,name=destLang" json:"destLang,omitempty"`
}

func (m *TranslateRequest) Reset()                    { *m = TranslateRequest{} }
func (m *TranslateRequest) String() string            { return proto.CompactTextString(m) }
func (*TranslateRequest) ProtoMessage()               {}
func (*TranslateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *TranslateRequest) GetText() []string {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *TranslateRequest) GetSourceLang() string {
	if m != nil {
		return m.SourceLang
	}
	return ""
}

func (m *TranslateRequest) GetDestLang() string {
	if m != nil {
		return m.DestLang
	}
	return ""
}

type TranslateResponse struct {
	Translations []string `protobuf:"bytes,1,rep,name=translations" json:"translations,omitempty"`
	Info         string   `protobuf:"bytes,2,opt,name=Info" json:"Info,omitempty"`
}

func (m *TranslateResponse) Reset()                    { *m = TranslateResponse{} }
func (m *TranslateResponse) String() string            { return proto.CompactTextString(m) }
func (*TranslateResponse) ProtoMessage()               {}
func (*TranslateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *TranslateResponse) GetTranslations() []string {
	if m != nil {
		return m.Translations
	}
	return nil
}

func (m *TranslateResponse) GetInfo() string {
	if m != nil {
		return m.Info
	}
	return ""
}

func init() {
	proto.RegisterType((*TranslateRequest)(nil), "proto.translate.TranslateRequest")
	proto.RegisterType((*TranslateResponse)(nil), "proto.translate.TranslateResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Service service

type ServiceClient interface {
	Translate(ctx context.Context, in *TranslateRequest, opts ...client.CallOption) (*TranslateResponse, error)
}

type serviceClient struct {
	c           client.Client
	serviceName string
}

func NewServiceClient(serviceName string, c client.Client) ServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "proto.translate"
	}
	return &serviceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *serviceClient) Translate(ctx context.Context, in *TranslateRequest, opts ...client.CallOption) (*TranslateResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Service.Translate", in)
	out := new(TranslateResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Service service

type ServiceHandler interface {
	Translate(context.Context, *TranslateRequest, *TranslateResponse) error
}

func RegisterServiceHandler(s server.Server, hdlr ServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Service{hdlr}, opts...))
}

type Service struct {
	ServiceHandler
}

func (h *Service) Translate(ctx context.Context, in *TranslateRequest, out *TranslateResponse) error {
	return h.ServiceHandler.Translate(ctx, in, out)
}

func init() {
	proto.RegisterFile("github.com/kazoup/platform/translate/srv/proto/translate/translate.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 225 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x8f, 0x41, 0x4f, 0xc3, 0x30,
	0x0c, 0x85, 0x19, 0x43, 0x40, 0x2d, 0x24, 0xc0, 0xa7, 0x69, 0x07, 0x34, 0x72, 0xda, 0x29, 0x91,
	0xe0, 0x4f, 0x80, 0xe0, 0x54, 0x76, 0x47, 0x69, 0xf1, 0x46, 0xc5, 0x16, 0x97, 0xd8, 0x9d, 0x10,
	0xbf, 0x1e, 0x11, 0xb6, 0xa8, 0xf4, 0xb0, 0x53, 0x9e, 0xbf, 0x67, 0xe5, 0x3d, 0xc3, 0xc3, 0xaa,
	0xd1, 0xf7, 0xae, 0xb2, 0x35, 0x6f, 0xdc, 0x87, 0xff, 0xe6, 0xae, 0x75, 0xed, 0xda, 0xeb, 0x92,
	0xe3, 0xc6, 0x69, 0xf4, 0x41, 0xd6, 0x5e, 0xc9, 0x49, 0xdc, 0xba, 0x36, 0xb2, 0x72, 0x8f, 0x65,
	0x65, 0x93, 0x83, 0x97, 0xe9, 0xb1, 0x19, 0x9b, 0x0a, 0xae, 0x16, 0xfb, 0xa1, 0xa4, 0xcf, 0x8e,
	0x44, 0x11, 0xe1, 0x44, 0xe9, 0x4b, 0x27, 0xa3, 0xd9, 0x78, 0x5e, 0x94, 0x49, 0xe3, 0x0d, 0x80,
	0x70, 0x17, 0x6b, 0x7a, 0xf6, 0x61, 0x35, 0x39, 0x9e, 0x8d, 0xe6, 0x45, 0xd9, 0x23, 0x38, 0x85,
	0xf3, 0x37, 0x12, 0x4d, 0xee, 0x38, 0xb9, 0x79, 0x36, 0x4f, 0x70, 0xdd, 0xcb, 0x90, 0x96, 0x83,
	0x10, 0x1a, 0xb8, 0xd8, 0xb7, 0x68, 0x38, 0xc8, 0x2e, 0xec, 0x1f, 0xfb, 0x2d, 0xf2, 0x18, 0x96,
	0xbc, 0x8b, 0x4b, 0xfa, 0xee, 0x15, 0xce, 0x5e, 0x28, 0x6e, 0x9b, 0x9a, 0x70, 0x01, 0x45, 0xfe,
	0x17, 0x6f, 0xed, 0xe0, 0x34, 0x3b, 0xbc, 0x6b, 0x6a, 0x0e, 0xad, 0xfc, 0xd5, 0x32, 0x47, 0xd5,
	0x69, 0x5a, 0xba, 0xff, 0x09, 0x00, 0x00, 0xff, 0xff, 0x0b, 0xa4, 0x80, 0x2a, 0x75, 0x01, 0x00,
	0x00,
}
